# Question 1 graph b
b <- ggplot(silent_change, aes(x = year_id, y = x_lower_bound)) +
geom_line() +
geom_line(data = baby_change, color = "red") +
geom_line(data = x_change, color = "blue") +
geom_line(data = y_change, color = "green") +
geom_line(data = z_change, color = "purple") +
labs(
title = paste0("Trend in ", input$type_slider, " for Different Generations for ", input$state_select),
x = "Year",
y = "Mortality Rate Percentage (Lower Bound)"
)
b
})
### END OF QUESTION 1
### QUESTION 2
### END OF QUESTION 2
### QUESTION 3
### END OF QUESTION 3
### QUESTION 4
### END OF QUESTION 4
}
shinyServer(my_server)
View(my_ui)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
# Creates UI layout and elements
my_ui <- fluidPage(
titlePanel(strong("United States Mortality Rates Report")),
br(),
sidebarLayout(
sidebarPanel(
h3("Control Panel"),
selectInput("state_select",
label = p("Select State"),
choices = state.name, selected = "Alabama"
),
sliderInput("year_slider",
label = "Year",
min = 1980, max = 2014, value = 1980
),
selectInput("type_slider",
label = "Mortality Type",
choices = c("Alcohol use disorders", "Drug use disorders", "Interpersonal violence", "Self-harm"),
selected = "Alcohol use disorders"
)
),
mainPanel(
h3("Findings Panel"),
tabsetPanel(
type = "tabs",
tabPanel(
"Question 1", br(), plotOutput("question_one_plot_a"), br(), plotOutput("question_one_plot_b")
),
tabPanel(
"Question 2", br()
),
tabPanel(
"Question 3", br()
),
tabPanel(
"Question 4", br()
)
)
)
)
)
shinyUI(my_ui)
library(shiny)
library(dplyr)
library(DT)
library(ggplot2)
my_server <- function(input, output) {
### QUESTION 1
output$question_one_plot_a <- renderPlot({
## Pulling in correct csv file based on state selected
fixed_state <- gsub(" ", "_", input$state_select)
state_data <- read.csv(paste0("./data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_", fixed_state, "_Y2018M03D13.CSV"))
## Find birth year and generational bucket
state_data <- state_data %>%
mutate(birth_year = year_id - age_id) %>%
mutate(generation =
case_when(
birth_year %in% generation_silent ~ "Silent",
birth_year %in% generation_baby_boomer ~ "Baby Boomer",
birth_year %in% generation_x ~ "X",
birth_year %in% generation_y ~ "Y",
birth_year %in% generation_silent ~ "Z"
))
## For overall statistics
silent <- state_data %>%
filter(generation == "Silent") %>%
group_by(cause_name) %>%
summarize(
silent_lower_bound = mean(lower),
silent_upper_bound = mean(upper)
)
baby <- state_data %>%
filter(generation == "Baby Boomer") %>%
group_by(cause_name) %>%
summarize(
baby_lower_bound = mean(lower),
baby_upper_bound = mean(upper)
)
x <- state_data %>%
filter(generation == "X") %>%
group_by(cause_name) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
y <- state_data %>%
filter(generation == "Y") %>%
group_by(cause_name) %>%
summarize(
y_lower_bound = mean(lower),
y_upper_bound = mean(upper)
)
z <- state_data %>%
filter(generation == "Z") %>%
group_by(cause_name) %>%
summarize(
z_lower_bound = mean(lower),
z_interval_upper_bound = mean(upper)
)
# Combining different generations
state_combined <- right_join(silent, baby, by = "cause_name")
state_combined <- left_join(state_combined, x, by = "cause_name")
state_combined <- left_join(state_combined, y, by = "cause_name")
state_combined <- left_join(state_combined, z, by = "cause_name")
# Turns data into long format for easier graphing
state_combined_long <- gather(state_combined, key = data_type, value = mortality_percentage, silent_lower_bound,
silent_upper_bound, baby_lower_bound, baby_upper_bound, x_lower_bound, x_upper_bound,
y_lower_bound, y_upper_bound, z_lower_bound, z_interval_upper_bound)
state_combined_long <- state_combined_long %>%
mutate(generation =  gsub("_.*","", state_combined_long$data_type))
# Question 1 graph a
a <- ggplot(data = state_combined_long) +
geom_point(mapping = aes(x = cause_name, y = mortality_percentage, color = generation)) +
facet_grid(. ~ generation) +
labs(
title = paste0("Average Mortality Rates By Generation Between 1980 and 2014 for ", input$state_select),
x = "Mortality Type",
y = "Mortality Percentage (%)"
) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
a
})
output$question_one_table_a <- renderTable({
fixed_state <- gsub(" ", "_", input$state_select)
state_data <- read.csv(paste0("./data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_", fixed_state, "_Y2018M03D13.CSV"))
## For specific year and to pull from for inline analysis
state_data_year <- state_data %>%
filter(year_id == input$year_slider)
silent_year <- state_data_year %>%
filter(generation == "Silent") %>%
group_by(cause_name) %>%
summarize(
silent_lower_bound = mean(lower),
silent_upper_bound = mean(upper)
)
baby_year <- state_data_year %>%
filter(generation == "Baby Boomer") %>%
group_by(cause_name) %>%
summarize(
baby_lower_bound = mean(lower),
baby_upper_bound = mean(upper)
)
x_year <- state_data_year %>%
filter(generation == "X") %>%
group_by(cause_name) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
y_year <- state_data_year %>%
filter(generation == "Y") %>%
group_by(cause_name) %>%
summarize(
y_lower_bound = mean(lower),
y_upper_bound = mean(upper)
)
z_year <- state_data_year %>%
filter(generation == "Z") %>%
group_by(cause_name) %>%
summarize(
z_lower_bound = mean(lower),
z_interval_upper_bound = mean(upper)
)
# Combining different generations
state_combined_year <- right_join(silent_year, baby_year, by = "cause_name")
state_combined_year <- left_join(state_combined_year, x_year, by = "cause_name")
state_combined_year <- left_join(state_combined_year, y_year, by = "cause_name")
state_combined_year <- left_join(state_combined_year, z_year, by = "cause_name")
state_combined_year_long <- gather(state_combined_year, key = data_type, value = mortality_percentage, silent_lower_bound,
silent_upper_bound, baby_lower_bound, baby_upper_bound, x_lower_bound, x_upper_bound,
y_lower_bound, y_upper_bound, z_lower_bound, z_interval_upper_bound)
## Difference from year to overall average (to pull for inline analysis)
state_combined_long_delta <- state_combined_long %>%
mutate(overall_average = state_combined_year_long$mortality_percentage) %>%
mutate(delta = mortality_percentage - overall_average)
})
output$question_one_plot_b <- renderPlot({
## Pulling in correct csv file based on state selected
fixed_state <- gsub(" ", "_", input$state_select)
state_data <- read.csv(paste0("./data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_", fixed_state, "_Y2018M03D13.CSV"))
## Find birth year and generational bucket
state_data <- state_data %>%
mutate(birth_year = year_id - age_id) %>%
mutate(generation =
case_when(
birth_year %in% generation_silent ~ "Silent",
birth_year %in% generation_baby_boomer ~ "Baby Boomer",
birth_year %in% generation_x ~ "X",
birth_year %in% generation_y ~ "Y",
birth_year %in% generation_silent ~ "Z"
))
## Year over year changes for specific type
type <- input$type_slider
silent_change <- state_data %>%
filter(generation == "Silent") %>%
filter(cause_name == type) %>%
group_by(year_id) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
baby_change <- state_data %>%
filter(generation == "Baby Boomer") %>%
filter(cause_name == type) %>%
group_by(year_id) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
x_change <- state_data %>%
filter(generation == "X") %>%
filter(cause_name == type) %>%
group_by(year_id) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
y_change <- state_data %>%
filter(generation == "Y") %>%
filter(cause_name == type) %>%
group_by(year_id) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
z_change <- state_data %>%
filter(generation == "Z") %>%
filter(cause_name == type) %>%
group_by(year_id) %>%
summarize(
x_lower_bound = mean(lower),
x_upper_bound = mean(upper)
)
# Question 1 graph b
b <- ggplot(silent_change, aes(x = year_id, y = x_lower_bound)) +
geom_line() +
geom_line(data = baby_change, color = "red") +
geom_line(data = x_change, color = "blue") +
geom_line(data = y_change, color = "green") +
geom_line(data = z_change, color = "purple") +
labs(
title = paste0("Trend in ", input$type_slider, " for Different Generations for ", input$state_select),
x = "Year",
y = "Mortality Rate Percentage (Lower Bound)"
)
b
})
### END OF QUESTION 1
### QUESTION 2
### END OF QUESTION 2
### QUESTION 3
### END OF QUESTION 3
### QUESTION 4
### END OF QUESTION 4
}
shinyServer(my_server)
runApp()
library(shiny)
install.packages("tidyr")
runApp()
install.packages("DT")
runApp()
data <- read.csv(file = "/data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
data <- read.csv(file = "data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
View(data)
data2 <- read.csv(file = "data/per_capita_income_per_county.csv")
View(data2)
data2 <- read.csv(file = "data/per_capita_income_per_county.csv")
View(data2)
colnames(data2)[2] <- "location_name"
View(data2)
data3 <- left_join(data, data2, by = "location_name")
data <- read.csv(file = "data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV", stringsAsFactors = FALSE)
data2 <- read.csv(file = "data/per_capita_income_per_county.csv", stringsAsFactors = FALSE)
colnames(data2)[2] <- "location_name"
data3 <- left_join(data, data2, by = "location_name")
View(data3)
na.omit(data3)
data3 <- na.omit(data3)
View(data3)
data3 <- left_join(data, data2, by = "location_name")
View(data3)
data2$location_name <- paste(data2$location_name, "County")
View(data2)
data3 <- left_join(data, data2, by = "location_name")
View(data3)
prosperity_data <- read.csv(file = "data/per_capita_income_per_county.csv", stringsAsFactors = FALSE)
colnames(prosperity_data)[2] <- "location_name"
prosperity_data$location_name <- paste(prosperity_data$location_name, "County")
fixed_state <- gsub(" ", "_", input$state_select)
state_data <- read.csv(paste0("./data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_", fixed_state, "_Y2018M03D13.CSV"),
stringsAsFactors = FALSE)
final_data <- left_join(state_data, prosperity_data, by = "location_name")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("splitstackshape")
runApp()
install.packages("plotly")
runApp()
runApp()
runApp()
data <- read.csv("data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
View(data)
runApp()
View(data)
data <- filter(data, year_id == "1998")
runApp()
View(prosperity_data)
runApp()
final_data <- left_join(state_data, prosperity_data, by = "location_name")
final_data <- left_join(data, prosperity_data, by = "location_name")
View(final_data)
final_data <- filter(final_data, year_id == input$year_slider, sex == "Both",
cause_name == input$type_slider)
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Alcohol use disorders")
View(final_data)
final_data <- left_join(data, prosperity_data, by = "location_name")
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Alcohol use disorders", State == "Wyoming")
runApp()
ggplot(data = final_data) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=14, angle=45)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx, color = Population)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
View(final_data)
View(data)
data <- read.csv("data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
data <- filter(data, year_id == "1998")
final_data <- left_join(data, prosperity_data, by = "location_name")
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Self-Harm", State == "Wyoming")
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
data <- read.csv("data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
data <- filter(data, year_id == "1998")
final_data <- left_join(data, prosperity_data, by = "location_name")
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Self-harm", State == "Wyoming")
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
data <- read.csv("data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
data <- filter(data, year_id == "1998")
final_data <- left_join(data, prosperity_data, by = "location_name")
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Drug use disorders", State == "Wyoming")
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
data <- read.csv("data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
data <- filter(data, year_id == "1998")
final_data <- left_join(data, prosperity_data, by = "location_name")
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Interpersonal Violence", State == "Wyoming")
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
data <- read.csv("data/IHME_USA_COUNTY_USE_INJ_MORTALITY_1980_2014_WYOMING_Y2018M03D13.CSV")
data <- filter(data, year_id == "1998")
final_data <- left_join(data, prosperity_data, by = "location_name")
final_data <- filter(final_data, year_id == "1998", sex == "Both",
cause_name == "Interpersonal violence", State == "Wyoming")
ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
geom_point(mapping = aes(x = Median.family.income, y = mx)) +
theme(axis.text.x = element_text(face="bold", color="#993333",
size=10, angle=70)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", "input$state_select",
" in ", "input$year_slider"),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", "input$type_slider")
)
runApp()
runApp()
final_data <- final_data %>%
filter(year_id == input$year) %>%
filter(cause_name == input$abuse_type) %>%
filter(sex == "Both") %>%
filter(State == input$state_select)
#Graph of mx mortality rate as median family income rises
p <- ggplot(data = final_data) +
geom_smooth(mapping = aes(x = Median.family.income, y = mx)) +
labs(
title = paste0("Average Mortality Rates By Median Family Income for ", input$state_select,
" in ", input$year),
x = "Median Faily Income ($)",
y = paste0("Mortality Rate by ", input$abuse_type)
) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
runApp()
runApp()
